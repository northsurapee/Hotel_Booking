{
	"info": {
		"_postman_id": "b4b92390-b8c8-4c5b-b8f1-82bf92841fa9",
		"name": "HotelBooking",
		"description": "Backend API for reserving Vaccine jab timeslots, including hospitals, users, and bookings.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "31863056",
		"_collection_link": "https://martian-firefly-408474.postman.co/workspace/Budwisuu!-Workspace~7dd27e8b-25ea-4629-8ef1-46ef84ee05b7/collection/32467878-b4b92390-b8c8-4c5b-b8f1-82bf92841fa9?action=share&source=collection_link&creator=31863056"
	},
	"item": [
		{
			"name": "Hotels",
			"item": [
				{
					"name": "Login (Admin) 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set(\"TOKEN\", pm.response.json().token)\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"postman.setNextRequest(\"Get all hotels\")"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": "JSON Type",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\":\"admin@admin.com\",\n    \"password\": \"12345678\"\n}\n\n\n// // SQL injection\n// {\n//     \"email\": {\"$gt\":\"\"},\n//     \"password\": \"12345678\"\n// }\n\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/auth/login",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get all hotels",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"const response = pm.response.json();\r",
									"\r",
									"// console.log(response);\r",
									"\r",
									"pm.test(\"There are some hotels!!\", () => {\r",
									"    pm.expect(response.count).to.be.above(0);\r",
									"});\r",
									"\r",
									"postman.setNextRequest(\"Create new hotel\");"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/v1/hotels/",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"hotels",
								""
							]
						},
						"description": "Fetch all hospitals from database."
					},
					"response": []
				},
				{
					"name": "Create new hotel",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"const response = pm.response.json();\r",
									"const new_hotel_id = response.data.id;\r",
									"\r",
									"pm.globals.set(\"global_hotel_ID\", new_hotel_id);\r",
									"\r",
									"postman.setNextRequest(\"Get single hotel\");"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": "JSON Type",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"{{$randomCompanyName}}\",\n    \"address\": \"{{$randomStreetAddress}}\",\n    \"subDistrict\": \"{{$randomCity}}\",\n    \"district\" : \"{{$randomCity}}\",\n    \"province\" : \"{{$randomCity}}\",\n    \"postalcode\" : \"1234\",\n    \"tel\" : \"{{$randomPhoneNumber}}\"\n} ",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/hotels",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"hotels"
							]
						},
						"description": "Create new hospital to database."
					},
					"response": []
				},
				{
					"name": "Get single hotel",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"postman.setNextRequest(\"Update hotel\");"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/v1/hotels/:hotel_ID/bookings",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"hotels",
								":hotel_ID",
								"bookings"
							],
							"variable": [
								{
									"key": "hotel_ID",
									"value": "{{global_hotel_ID}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Update hotel",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"postman.setNextRequest(\"Delete hotel\");"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": "JSON Type",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"{{$randomCompanyName}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/hotels/:hotel_ID",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"hotels",
								":hotel_ID"
							],
							"variable": [
								{
									"key": "hotel_ID",
									"value": "{{global_hotel_ID}}"
								}
							]
						},
						"description": "Update the hospital in database."
					},
					"response": []
				},
				{
					"name": "Delete hotel",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"// postman.setNextRequest(\"Get all hotels\");"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/v1/hotels/:hotel_ID",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"hotels",
								":hotel_ID"
							],
							"variable": [
								{
									"key": "hotel_ID",
									"value": "{{global_hotel_ID}}"
								}
							]
						},
						"description": "Delete the hospital in database."
					},
					"response": []
				}
			],
			"description": "Hospitals CRUD funtionality"
		},
		{
			"name": "Rooms",
			"item": [
				{
					"name": "Login (Admin) 3",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set(\"TOKEN\", pm.response.json().token)\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"postman.setNextRequest(\"Get all rooms\")"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": "JSON Type",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\":\"admin@admin.com\",\n    \"password\": \"12345678\"\n}\n\n\n// // SQL injection\n// {\n//     \"email\": {\"$gt\":\"\"},\n//     \"password\": \"12345678\"\n// }\n\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/auth/login",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get all rooms",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"const response = pm.response.json();\r",
									"\r",
									"// console.log(response);\r",
									"\r",
									"pm.test(\"There are some rooms!!\", () => {\r",
									"    pm.expect(response.count).to.be.above(0);\r",
									"});\r",
									"\r",
									"postman.setNextRequest(\"Create new room\");"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/v1/rooms",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"rooms"
							]
						},
						"description": "Fetch all hospitals from database."
					},
					"response": []
				},
				{
					"name": "Get single room",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"postman.setNextRequest(\"Update room\");"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/v1/rooms/:room_ID",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"rooms",
								":room_ID"
							],
							"variable": [
								{
									"key": "room_ID",
									"value": "{{global_room_ID}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create new room",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"const response = pm.response.json();\r",
									"const new_room_id = response.data.id;\r",
									"\r",
									"pm.globals.set(\"global_room_ID\", new_room_id);\r",
									"\r",
									"postman.setNextRequest(\"Get single room\");"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": "JSON Type",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"hotelId\": \"661a269ed880a69e8d7c05b7\",\n    \"name\": \"{{$randomFullName}}\",\n    \"maxResidents\": 2\n} ",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/rooms",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"rooms"
							]
						},
						"description": "Create new hospital to database."
					},
					"response": []
				},
				{
					"name": "Update room",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"postman.setNextRequest(\"Delete room\");"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": "JSON Type",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"updated!\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/rooms/:room_ID",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"rooms",
								":room_ID"
							],
							"variable": [
								{
									"key": "room_ID",
									"value": "{{global_room_ID}}"
								}
							]
						},
						"description": "Update the hospital in database."
					},
					"response": []
				},
				{
					"name": "Delete room",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"// postman.setNextRequest(null);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/v1/rooms/:room_ID",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"rooms",
								":room_ID"
							],
							"variable": [
								{
									"key": "room_ID",
									"value": "{{global_room_ID}}"
								}
							]
						},
						"description": "Delete the hospital in database."
					},
					"response": []
				}
			],
			"description": "Hospitals CRUD funtionality"
		},
		{
			"name": "Authentication",
			"item": [
				{
					"name": "Register user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set(\"TOKEN\", pm.response.json().token)\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"postman.setNextRequest(\"Login (User)\")"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": "JSON Type",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\":\"pingping\",\n    \"email\":\"{{$randomUserName}}@gmail.com\",\n    \"password\":\"12345678\",\n    \"tel\" : \"0851119544\",\n    \"role\":\"user\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/auth/register",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login (User)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set(\"TOKEN\", pm.response.json().token)\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"postman.setNextRequest(\"Login (Admin)\")"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": "JSON Type",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\":\"awatsingdamrong@gmail.com\",\n    \"password\": \"12345678\"\n}\n\n\n// // SQL injection\n// {\n//     \"email\": {\"$gt\":\"\"},\n//     \"password\": \"12345678\"\n// }\n\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/auth/login",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login (Admin)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set(\"TOKEN\", pm.response.json().token)\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"postman.setNextRequest(\"Get me\")"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": "JSON Type",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\":\"admin@admin.com\",\n    \"password\": \"12345678\"\n}\n\n\n// // SQL injection\n// {\n//     \"email\": {\"$gt\":\"\"},\n//     \"password\": \"12345678\"\n// }\n\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/auth/login",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get me",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"postman.setNextRequest(\"Logout\")"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": "JSON Type",
								"type": "text"
							},
							{
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
								"key": "Authorization",
								"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY2MTRlYmM4ZmI4YzYxMTBhYjRmMWUyNCIsImlhdCI6MTcxMjY0NzExNywiZXhwIjoxNzE1MjM5MTE3fQ.6upwyWwDicq90g75OyCS89oyflHcm4i8y0GNw7j-Ka4",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{URL}}/api/v1/auth/me",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"me"
							]
						}
					},
					"response": []
				},
				{
					"name": "Logout",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set(\"TOKEN\", null)\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/v1/auth/logout",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"logout"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Bookings (User)",
			"item": [
				{
					"name": "Login (User) Copy 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set(\"TOKEN\", pm.response.json().token)\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"postman.setNextRequest(\"Get All Bookings\");"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": "JSON Type",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\":\"awatsingdamrong@gmail.com\",\n    \"password\": \"12345678\"\n}\n\n\n// // SQL injection\n// {\n//     \"email\": {\"$gt\":\"\"},\n//     \"password\": \"12345678\"\n// }\n\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/auth/login",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Bookings",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"const response = pm.response.json();",
									"",
									"pm.test(\"There are some booking!!\", () => {",
									"    pm.expect(response.count).to.be.above(0)",
									"});",
									"",
									"console.log(response);",
									"",
									"postman.setNextRequest(\"Get Booking for Hotel\")"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/v1/bookings",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"bookings"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Booking for Hotel",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/v1/hotels/:hotel_ID/bookings",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"hotels",
								":hotel_ID",
								"bookings"
							],
							"variable": [
								{
									"key": "hotel_ID",
									"value": "661a269ed880a69e8d7c05b7"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Add booking (Wrong HotelId)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"",
									"const response = pm.response.json();",
									"",
									"postman.setNextRequest(\"Add Booking (Booking days > 3)\")"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"startDate\": \"2024-01-28\",\n    \"endDate\": \"2024-01-29\",\n    \"residents\": 1,\n    \"rooms\": [\n        {\n            \"roomId\": \"661a3e80a250222185caec21\"\n        }\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/hotels/:hotel_ID/bookings",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"hotels",
								":hotel_ID",
								"bookings"
							],
							"variable": [
								{
									"key": "hotel_ID",
									"value": "662bbde0d36d89c0cdcaed5b"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Booking (Booking days > 3)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"const response = pm.response.json();",
									"",
									"postman.setNextRequest(\"Add Booking (Wrong roomId)\")"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"startDate\": \"2024-01-25\",\n    \"endDate\": \"2024-01-29\",\n    \"residents\": 1,\n    \"rooms\": [\n        {\n            \"roomId\": \"661a3e80a250222185caec21\"\n        }\n    ]\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/hotels/:hotel_ID/bookings",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"hotels",
								":hotel_ID",
								"bookings"
							],
							"variable": [
								{
									"key": "hotel_ID",
									"value": "661a269ed880a69e8d7c05b7"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Booking (Wrong roomId)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 500\", function () {",
									"    pm.response.to.have.status(500);",
									"});",
									"",
									"const response = pm.response.json();",
									"",
									"postman.setNextRequest(\"Add Booking (Booking days has been reserved)\")"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"startDate\": \"2024-01-28\",\n    \"endDate\": \"2024-01-29\",\n    \"residents\": 1,\n    \"rooms\": [\n        {\n            \"roomId\": \"661a269ed880a69e8d7c05b7\"\n        }\n    ]\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/hotels/:hotel_ID/bookings",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"hotels",
								":hotel_ID",
								"bookings"
							],
							"variable": [
								{
									"key": "hotel_ID",
									"value": "661a269ed880a69e8d7c05b7"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Booking (Booking days has been reserved)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"const response = pm.response.json();",
									"",
									"postman.setNextRequest(\"Login (Admin) Copy\")"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"startDate\": \"2024-01-28\",\n    \"endDate\": \"2024-01-29\",\n    \"residents\": 1,\n    \"rooms\": [\n        {\n            \"roomId\": \"661a3e80a250222185caec21\"\n        }\n    ]\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/hotels/:hotel_ID/bookings",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"hotels",
								":hotel_ID",
								"bookings"
							],
							"variable": [
								{
									"key": "hotel_ID",
									"value": "661a269ed880a69e8d7c05b7"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Login (Admin) Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set(\"TOKEN\", pm.response.json().token)\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"postman.setNextRequest(\"Create new room Copy\")"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": "JSON Type",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\":\"admin@admin.com\",\n    \"password\": \"12345678\"\n}\n\n\n// // SQL injection\n// {\n//     \"email\": {\"$gt\":\"\"},\n//     \"password\": \"12345678\"\n// }\n\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/auth/login",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create new room Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"const response = pm.response.json();\r",
									"const new_room_id = response.data.id;\r",
									"\r",
									"pm.globals.set(\"global_room_ID\", new_room_id);\r",
									"\r",
									"postman.setNextRequest(\"Login (User) Copy\");"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": "JSON Type",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"hotelId\": \"661a269ed880a69e8d7c05b7\",\n    \"name\": \"{{$randomFullName}}\",\n    \"maxResidents\": 2\n} ",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/rooms",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"rooms"
							]
						},
						"description": "Create new hospital to database."
					},
					"response": []
				},
				{
					"name": "Login (User) Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set(\"TOKEN\", pm.response.json().token)\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"postman.setNextRequest(\"Add Booking (PASS)\");"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": "JSON Type",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\":\"awatsingdamrong@gmail.com\",\n    \"password\": \"12345678\"\n}\n\n\n// // SQL injection\n// {\n//     \"email\": {\"$gt\":\"\"},\n//     \"password\": \"12345678\"\n// }\n\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/auth/login",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Booking (PASS)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"const response = pm.response.json();",
									"const new_id = response.data._id;",
									"",
									"pm.globals.set(\"global_booking_id\", new_id)"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"startDate\": \"2024-01-28\",\n    \"endDate\": \"2024-01-29\",\n    \"residents\": 1,\n    \"rooms\": [\n        {\n            \"roomId\": \"{{global_room_ID}}\"\n        }\n    ]\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/hotels/:hotel_ID/bookings",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"hotels",
								":hotel_ID",
								"bookings"
							],
							"variable": [
								{
									"key": "hotel_ID",
									"value": "661a269ed880a69e8d7c05b7"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get ONE Booking",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"const response = pm.response.json();",
									"",
									"console.log(response);",
									"",
									"postman.setNextRequest(\"Update Booking (Wrong bookingId)\")",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/v1/bookings/:booking_ID",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"bookings",
								":booking_ID"
							],
							"variable": [
								{
									"key": "booking_ID",
									"value": "{{global_booking_id}}",
									"description": "ex. 662176dbf5c59c7569c33060"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Booking (Wrong bookingId)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"const response = pm.response.json();",
									"",
									"postman.setNextRequest(\"Update Booking (Edit isEmailSent)\")",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"residents\": 2,\n    \"startDate\": \"2024-02-19\",\n    \"isEmailSent\": false\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/bookings/:booking_ID",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"bookings",
								":booking_ID"
							],
							"variable": [
								{
									"key": "booking_ID",
									"value": "661a269ed880a69e8d7c05b7"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Booking (Edit isEmailSent)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"const response = pm.response.json();",
									"",
									"postman.setNextRequest(\"Update Booking (Booking days > 3)\")",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    // \"residents\": 2,\n    // \"startDate\": \"2024-02-19\",\n    \"isEmailSent\": false\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/bookings/:booking_ID",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"bookings",
								":booking_ID"
							],
							"variable": [
								{
									"key": "booking_ID",
									"value": "{{global_booking_id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Booking (Booking days > 3)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"const response = pm.response.json();",
									"",
									"postman.setNextRequest(\"Update Booking\")",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    // \"residents\": 2,\n    \"startDate\": \"1024-02-19\"\n    // \"isEmailSent\": false\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/bookings/:booking_ID",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"bookings",
								":booking_ID"
							],
							"variable": [
								{
									"key": "booking_ID",
									"value": "{{global_booking_id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Booking",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"const response = pm.response.json();",
									"",
									"postman.setNextRequest(\"Delete Booking (Wrong bookingId)\")",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"residents\": 2\n    // \"startDate\": \"2024-02-19\",\n    // \"isEmailSent\": false\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/bookings/:booking_ID",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"bookings",
								":booking_ID"
							],
							"variable": [
								{
									"key": "booking_ID",
									"value": "{{global_booking_id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Booking (Wrong bookingId)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"const response = pm.response.json();",
									"",
									"postman.setNextRequest(\"Delete Booking\")"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/v1/bookings/:booking_ID",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"bookings",
								":booking_ID"
							],
							"variable": [
								{
									"key": "booking_ID",
									"value": "661a269ed880a69e8d7c05b7"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Booking",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"const response = pm.response.json();",
									"",
									"// postman.setNextRequest(\"Login (Admin) Copy 2\")"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/v1/bookings/:booking_ID",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"bookings",
								":booking_ID"
							],
							"variable": [
								{
									"key": "booking_ID",
									"value": "{{global_booking_id}}"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Bookings (Admin)",
			"item": [
				{
					"name": "Login (Admin) Copy 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set(\"TOKEN\", pm.response.json().token)\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"postman.setNextRequest(\"Get All Bookings (Admin)\")"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": "JSON Type",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\":\"admin@admin.com\",\n    \"password\": \"12345678\"\n}\n\n\n// // SQL injection\n// {\n//     \"email\": {\"$gt\":\"\"},\n//     \"password\": \"12345678\"\n// }\n\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/auth/login",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Bookings (Admin)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"const response = pm.response.json();",
									"",
									"pm.test(\"There are some booking!!\", () => {",
									"    pm.expect(response.count).to.be.above(0)",
									"});",
									"",
									"console.log(response);",
									"",
									"postman.setNextRequest(\"Get Booking for Hotel (Admin)\")"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/v1/bookings",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"bookings"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Booking for Hotel (Admin)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"const response = pm.response.json();",
									"",
									"pm.test(\"There are some booking!!\", () => {",
									"    pm.expect(response.count).to.be.above(0)",
									"});",
									"",
									"console.log(response);",
									"",
									"// postman.setNextRequest(\"Get Booking for Hotel (Admin)\")"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/v1/hotels/:hotel_ID/bookings",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"hotels",
								":hotel_ID",
								"bookings"
							],
							"variable": [
								{
									"key": "hotel_ID",
									"value": "661a269ed880a69e8d7c05b7"
								}
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "URL",
			"value": "http://localhost:3000"
		},
		{
			"key": "TOKEN",
			"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY1ZDFmODUzMGU0M2Y1NDFmZTZlNzA1YyIsImlhdCI6MTcxMjczNzYzNiwiZXhwIjoxNzE1MzI5NjM2fQ.rnU02989jQGmAd0L3Ke9NAC-ZhLye5sdA5q323Ssb0Q",
			"type": "string"
		}
	]
}