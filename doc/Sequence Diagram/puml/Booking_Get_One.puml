@startuml Manage Booking (GET ONE)

header Hotel Booking System Sequence Diagram
footer Group Awat & Surapee
title "Manage Reservation (GET ONE)"

participant "Client" as client
participant "<<javaScript>>\n:server" as server
participant "<<router>>\n:bookings" as routerBooking
participant "<<middleware>>\n:auth" as middleware
participant "<<controllers>>\n:bookings" as controllersBooking
participant "<<model>>\n:Booking" as modelBooking
database "<<MySQL>>\n:HotelBooking" as HotelBookingDatabase

client -> server ++:req.get('/api/v1/bookings/:id')
server -> routerBooking ++:app.use('/api/v1/bookings' ,bookings)
routerBooking -> middleware ++:protect()
alt Already logged in
    middleware --> routerBooking : next()
    routerBooking -> controllersBooking ++: getBooking()
else Not logged in yet
    middleware --> client : res.status(401).json({ sucess: false, message: 'Not authorize to access this route' })
end
controllersBooking -> modelBooking ++: findById(req.params.id)
modelBooking -> HotelBookingDatabase ++: BookingSchema
HotelBookingDatabase --> modelBooking --: booking
controllersBooking <-- modelBooking --: booking
alt found in database
    controllersBooking --> client :res.status(200).json({ success: true, data: booking })
else not found in database
    controllersBooking --> client --: res.status(404).json({ success: false, message: `No booking with the id of ${req.params.id}` })
end

@enduml
